{"ast":null,"code":"var _jsxFileName = \"/Users/Rosa/Desktop/projects ADALAB/Mo\\u0301dulo-3/EVALUACIONES/modulo-3-evaluacion-final-rosacodina/src/components/App.js\",\n    _s = $RefreshSig$();\n\nimport '../styles/App.scss';\nimport { useState, useEffect } from 'react';\nimport getApiData from '../services/moviesApi'; //I can name this import as I prefer\n\nimport MovieList from './MovieList';\nimport Filters from './Filters';\nimport MovieFilter from './MovieFilter';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  /*FETCH*/\n  useEffect(() => {\n    getApiData().then(dataClean => {\n      setDataMovies(dataClean);\n    });\n  }, []); //STATE VARIABLES//\n\n  /*API data*/\n\n  const [dataMovies, setDataMovies] = useState([]);\n  /*To filter by movie*/\n\n  const [movieFilter, setMovieFilter] = useState('');\n  /*State Variable to filter the years*/\n\n  const [yearFilter, setYearFilter] = useState([]); //FUNCTIONS//\n\n  /*Function to modify the state variable of MovieFilter*/\n\n  const handleMovieFilter = value => {\n    setMovieFilter(value);\n  };\n  /*Function that has the value of years I want to filter */\n\n\n  const handleYearFilter = value => {\n    if (yearFilter.includes(value)) {\n      const newYear = yearFilter.filter;\n    } else {}\n\n    setYearFilter([...yearFilter, value]);\n  };\n  /*To take the filtered data*/\n\n\n  const userFilters = dataMovies.filter(movie => {\n    /*if (movieFilter === '') {\n    return true;\n    } else {\n    return movie.name === movieFilter;\n    }*/\n    //Ternary, it is the same as the previous conditional\n    return movieFilter === '' ? true : movie.title === movieFilter;\n  }).filter(movie => {\n    if (yearFilter.length === 0) {\n      return true;\n    } else {\n      return yearFilter.includes(movie.year);\n    }\n  });\n  /*Function to get the films years from the API, so I have to create a new array*/\n\n  const getYear = () => {\n    const movieYear = dataMovies.map(movie => movie.year);\n    /*Function to avoid repeated years*/\n\n    const uniqueYear = movieYear.filter((year, index) => {\n      return movieYear.indexOf(year) === index;\n    });\n    return uniqueYear;\n  }; //--------------------------------------------------//\n\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"header_title\",\n      children: \"Owen Wilson's \\\"wow\\\" films\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MovieList, {\n      movies: userFilters\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Filters, {\n      handleMovieFilter: handleMovieFilter,\n      movieFilter: movieFilter,\n      getYear: getYear(),\n      handleYearFilter: handleYearFilter\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(App, \"nGc1prrZUqO5W6hPeqqjNGrI9M8=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/Rosa/Desktop/projects ADALAB/Módulo-3/EVALUACIONES/modulo-3-evaluacion-final-rosacodina/src/components/App.js"],"names":["useState","useEffect","getApiData","MovieList","Filters","MovieFilter","App","then","dataClean","setDataMovies","dataMovies","movieFilter","setMovieFilter","yearFilter","setYearFilter","handleMovieFilter","value","handleYearFilter","includes","newYear","filter","userFilters","movie","title","length","year","getYear","movieYear","map","uniqueYear","index","indexOf"],"mappings":";;;AAAA,OAAO,oBAAP;AACA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AAEA,OAAOC,UAAP,MAAuB,uBAAvB,C,CAAgD;;AAChD,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,WAAP,MAAwB,eAAxB;;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb;AACAL,EAAAA,SAAS,CAAC,MAAM;AACdC,IAAAA,UAAU,GAAGK,IAAb,CAAmBC,SAAD,IAAe;AAC/BC,MAAAA,aAAa,CAACD,SAAD,CAAb;AACD,KAFD;AAGD,GAJQ,EAIN,EAJM,CAAT,CAFa,CAQb;;AACA;;AACA,QAAM,CAACE,UAAD,EAAaD,aAAb,IAA8BT,QAAQ,CAAC,EAAD,CAA5C;AAEA;;AACA,QAAM,CAACW,WAAD,EAAcC,cAAd,IAAgCZ,QAAQ,CAAC,EAAD,CAA9C;AAEA;;AACA,QAAM,CAACa,UAAD,EAAaC,aAAb,IAA8Bd,QAAQ,CAAC,EAAD,CAA5C,CAhBa,CAkBb;;AACA;;AACA,QAAMe,iBAAiB,GAAIC,KAAD,IAAW;AACnCJ,IAAAA,cAAc,CAACI,KAAD,CAAd;AACD,GAFD;AAIA;;;AACA,QAAMC,gBAAgB,GAAID,KAAD,IAAW;AAClC,QAAIH,UAAU,CAACK,QAAX,CAAoBF,KAApB,CAAJ,EAAgC;AAC9B,YAAMG,OAAO,GAAGN,UAAU,CAACO,MAA3B;AACD,KAFD,MAEO,CACN;;AACDN,IAAAA,aAAa,CAAC,CAAC,GAAGD,UAAJ,EAAgBG,KAAhB,CAAD,CAAb;AACD,GAND;AAQA;;;AACA,QAAMK,WAAW,GAAGX,UAAU,CAC3BU,MADiB,CACTE,KAAD,IAAW;AACjB;AACN;AACA;AACA;AACA;AAEM;AACA,WAAOX,WAAW,KAAK,EAAhB,GAAqB,IAArB,GAA4BW,KAAK,CAACC,KAAN,KAAgBZ,WAAnD;AACD,GAViB,EAWjBS,MAXiB,CAWTE,KAAD,IAAW;AACjB,QAAIT,UAAU,CAACW,MAAX,KAAsB,CAA1B,EAA6B;AAC3B,aAAO,IAAP;AACD,KAFD,MAEO;AACL,aAAOX,UAAU,CAACK,QAAX,CAAoBI,KAAK,CAACG,IAA1B,CAAP;AACD;AACF,GAjBiB,CAApB;AAmBA;;AACA,QAAMC,OAAO,GAAG,MAAM;AACpB,UAAMC,SAAS,GAAGjB,UAAU,CAACkB,GAAX,CAAgBN,KAAD,IAAWA,KAAK,CAACG,IAAhC,CAAlB;AACA;;AACA,UAAMI,UAAU,GAAGF,SAAS,CAACP,MAAV,CAAiB,CAACK,IAAD,EAAOK,KAAP,KAAiB;AACnD,aAAOH,SAAS,CAACI,OAAV,CAAkBN,IAAlB,MAA4BK,KAAnC;AACD,KAFkB,CAAnB;AAGA,WAAOD,UAAP;AACD,GAPD,CAtDa,CA+Db;;;AACA,sBACE;AAAA,4BACE;AAAI,MAAA,SAAS,EAAC,cAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAGE,QAAC,SAAD;AAAW,MAAA,MAAM,EAAER;AAAnB;AAAA;AAAA;AAAA;AAAA,YAHF,eAIE,QAAC,OAAD;AACE,MAAA,iBAAiB,EAAEN,iBADrB;AAEE,MAAA,WAAW,EAAEJ,WAFf;AAGE,MAAA,OAAO,EAAEe,OAAO,EAHlB;AAIE,MAAA,gBAAgB,EAAET;AAJpB;AAAA;AAAA;AAAA;AAAA,YAJF;AAAA,kBADF;AAaD;;GA7EQX,G;;KAAAA,G;AA+ET,eAAeA,GAAf","sourcesContent":["import '../styles/App.scss';\nimport { useState, useEffect } from 'react';\n\nimport getApiData from '../services/moviesApi'; //I can name this import as I prefer\nimport MovieList from './MovieList';\nimport Filters from './Filters';\nimport MovieFilter from './MovieFilter';\n\nfunction App() {\n  /*FETCH*/\n  useEffect(() => {\n    getApiData().then((dataClean) => {\n      setDataMovies(dataClean);\n    });\n  }, []);\n\n  //STATE VARIABLES//\n  /*API data*/\n  const [dataMovies, setDataMovies] = useState([]);\n\n  /*To filter by movie*/\n  const [movieFilter, setMovieFilter] = useState('');\n\n  /*State Variable to filter the years*/\n  const [yearFilter, setYearFilter] = useState([]);\n\n  //FUNCTIONS//\n  /*Function to modify the state variable of MovieFilter*/\n  const handleMovieFilter = (value) => {\n    setMovieFilter(value);\n  };\n\n  /*Function that has the value of years I want to filter */\n  const handleYearFilter = (value) => {\n    if (yearFilter.includes(value)) {\n      const newYear = yearFilter.filter;\n    } else {\n    }\n    setYearFilter([...yearFilter, value]);\n  };\n\n  /*To take the filtered data*/\n  const userFilters = dataMovies\n    .filter((movie) => {\n      /*if (movieFilter === '') {\n      return true;\n    } else {\n      return movie.name === movieFilter;\n    }*/\n\n      //Ternary, it is the same as the previous conditional\n      return movieFilter === '' ? true : movie.title === movieFilter;\n    })\n    .filter((movie) => {\n      if (yearFilter.length === 0) {\n        return true;\n      } else {\n        return yearFilter.includes(movie.year);\n      }\n    });\n\n  /*Function to get the films years from the API, so I have to create a new array*/\n  const getYear = () => {\n    const movieYear = dataMovies.map((movie) => movie.year);\n    /*Function to avoid repeated years*/\n    const uniqueYear = movieYear.filter((year, index) => {\n      return movieYear.indexOf(year) === index;\n    });\n    return uniqueYear;\n  };\n\n  //--------------------------------------------------//\n  return (\n    <>\n      <h1 className=\"header_title\">Owen Wilson's \"wow\" films</h1>\n\n      <MovieList movies={userFilters} />\n      <Filters\n        handleMovieFilter={handleMovieFilter}\n        movieFilter={movieFilter}\n        getYear={getYear()}\n        handleYearFilter={handleYearFilter}\n      />\n    </>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}