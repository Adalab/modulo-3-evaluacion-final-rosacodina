{"ast":null,"code":"var _jsxFileName = \"/Users/Rosa/Desktop/projects ADALAB/Mo\\u0301dulo-3/EVALUACIONES/modulo-3-evaluacion-final-rosacodina/src/components/App.js\",\n    _s = $RefreshSig$();\n\n// import sirve para enlazar /traer las dependencias que necesitamos.\n// Librerías JS\n// CSS\n// Imágenes\n// JSON\nimport '../styles/App.scss';\nimport getApiData from '../services/moviesApi'; //I can name this import as I prefer\n\nimport { useEffect } from 'react'; // Función principal.\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [dataMovies, setDataMovies] = useState([]);\n  useEffect(() => {\n    getApiData().then(dataClean => {\n      console.log(dataClean);\n      setDataMovies(dataClean);\n    });\n  }, []);\n  return (\n    /*#__PURE__*/\n    // Como solo se puede devolver una etiqueta, se puede usar una etiqueta ficticia vacia, llamada FRAGMENTO, y que se escribe, abiriendo y cerrando la etiqueta vacia, así \"<> html </>\".\n    _jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"header__title\",\n        children: \"Owen Wilson's \\\"wow\\\" films\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 7\n      }, this)\n    }, void 0, false)\n  );\n}\n\n_s(App, \"aE8Yflmr16lVTPIJbHDpWStODgM=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/Rosa/Desktop/projects ADALAB/Módulo-3/EVALUACIONES/modulo-3-evaluacion-final-rosacodina/src/components/App.js"],"names":["getApiData","useEffect","App","dataMovies","setDataMovies","useState","then","dataClean","console","log"],"mappings":";;;AAAA;AACA;AACA;AACA;AACA;AAEA,OAAO,oBAAP;AACA,OAAOA,UAAP,MAAuB,uBAAvB,C,CAAgD;;AAChD,SAASC,SAAT,QAA0B,OAA1B,C,CAEA;;;;;AACA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BC,QAAQ,CAAC,EAAD,CAA5C;AAEAJ,EAAAA,SAAS,CAAC,MAAM;AACdD,IAAAA,UAAU,GAAGM,IAAb,CAAmBC,SAAD,IAAe;AAC/BC,MAAAA,OAAO,CAACC,GAAR,CAAYF,SAAZ;AACAH,MAAAA,aAAa,CAACG,SAAD,CAAb;AACD,KAHD;AAID,GALQ,EAKN,EALM,CAAT;AAOA;AAAA;AACE;AACA;AAAA,6BACE;AAAI,QAAA,SAAS,EAAC,eAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAFF;AAMD;;GAhBQL,G;;KAAAA,G;AAkBT,eAAeA,GAAf","sourcesContent":["// import sirve para enlazar /traer las dependencias que necesitamos.\n// Librerías JS\n// CSS\n// Imágenes\n// JSON\n\nimport '../styles/App.scss';\nimport getApiData from '../services/moviesApi'; //I can name this import as I prefer\nimport { useEffect } from 'react';\n\n// Función principal.\nfunction App() {\n  const [dataMovies, setDataMovies] = useState([]);\n\n  useEffect(() => {\n    getApiData().then((dataClean) => {\n      console.log(dataClean);\n      setDataMovies(dataClean);\n    });\n  }, []);\n\n  return (\n    // Como solo se puede devolver una etiqueta, se puede usar una etiqueta ficticia vacia, llamada FRAGMENTO, y que se escribe, abiriendo y cerrando la etiqueta vacia, así \"<> html </>\".\n    <>\n      <h1 className=\"header__title\">Owen Wilson's \"wow\" films</h1>\n    </>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}