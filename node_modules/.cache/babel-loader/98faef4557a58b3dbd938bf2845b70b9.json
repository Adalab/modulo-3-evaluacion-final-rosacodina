{"ast":null,"code":"var _jsxFileName = \"/Users/Rosa/Desktop/projects ADALAB/Mo\\u0301dulo-3/EVALUACIONES/modulo-3-evaluacion-final-rosacodina/src/components/YearFilter.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction YearFilter(props) {\n  const handleChange = ev => {\n    props.handleYearFilter(ev.target.value);\n  }; //To take the clean list with just the film years\n\n\n  const renderYears = () => {\n    return props.getYear.map((year, index) => {\n      return /*#__PURE__*/_jsxDEV(\"option\", {\n        value: year,\n        children: year\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 9\n      }, this);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"select\", {\n      onChange: handleChange,\n      className: \"year\",\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"all\",\n        children: \"Year of the film\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }, this), \" \", renderYears()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\n_c = YearFilter;\nexport default YearFilter;\n\nvar _c;\n\n$RefreshReg$(_c, \"YearFilter\");","map":{"version":3,"sources":["/Users/Rosa/Desktop/projects ADALAB/Módulo-3/EVALUACIONES/modulo-3-evaluacion-final-rosacodina/src/components/YearFilter.js"],"names":["YearFilter","props","handleChange","ev","handleYearFilter","target","value","renderYears","getYear","map","year","index"],"mappings":";;;;AAAA,SAASA,UAAT,CAAoBC,KAApB,EAA2B;AACzB,QAAMC,YAAY,GAAIC,EAAD,IAAQ;AAC3BF,IAAAA,KAAK,CAACG,gBAAN,CAAuBD,EAAE,CAACE,MAAH,CAAUC,KAAjC;AACD,GAFD,CADyB,CAIzB;;;AACA,QAAMC,WAAW,GAAG,MAAM;AACxB,WAAON,KAAK,CAACO,OAAN,CAAcC,GAAd,CAAkB,CAACC,IAAD,EAAOC,KAAP,KAAiB;AACxC,0BACE;AAAoB,QAAA,KAAK,EAAED,IAA3B;AAAA,kBACGA;AADH,SAAaC,KAAb;AAAA;AAAA;AAAA;AAAA,cADF;AAKD,KANM,CAAP;AAOD,GARD;;AASA,sBACE;AAAA,2BACE;AAAQ,MAAA,QAAQ,EAAET,YAAlB;AAAgC,MAAA,SAAS,EAAC,MAA1C;AAAA,8BACE;AAAQ,QAAA,KAAK,EAAC,KAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,OACiDK,WAAW,EAD5D;AAAA;AAAA;AAAA;AAAA;AAAA;AADF,mBADF;AAOD;;KArBQP,U;AAuBT,eAAeA,UAAf","sourcesContent":["function YearFilter(props) {\n  const handleChange = (ev) => {\n    props.handleYearFilter(ev.target.value);\n  };\n  //To take the clean list with just the film years\n  const renderYears = () => {\n    return props.getYear.map((year, index) => {\n      return (\n        <option key={index} value={year}>\n          {year}\n        </option>\n      );\n    });\n  };\n  return (\n    <>\n      <select onChange={handleChange} className=\"year\">\n        <option value=\"all\">Year of the film</option> {renderYears()}\n      </select>\n    </>\n  );\n}\n\nexport default YearFilter;\n"]},"metadata":{},"sourceType":"module"}